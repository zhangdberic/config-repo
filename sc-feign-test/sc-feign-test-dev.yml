server:
  port: 8005
# 关闭安全认证,否则actuator提供的url访问报错401,例如:/refresh或/evn等.  
management:
  security:
    enabled: false    
spring:
  # java -D属性可以覆盖本远程参数
  cloud:
    config:
      overrideSystemProperties: false
  # 和spring-cloud-starter-bus-amqp配合,用于/bus/refresh分布式服务属性刷新
  rabbitmq:
    host: 192.168.5.29
    port: 5672
    username: admin
    password: Rabbitmq-401
  # spring boot devtools  
  devtools:
    restart:
      enabled: false    
# eureka客户端    
eureka:
  client:
    service-url:
      # 基于Basic的Security的访问eureka服务器
      defaultZone: http://sc-eureka:veDSJeUX-JSxkWrk@192.168.5.78:8070/eureka/,http://sc-eureka:veDSJeUX-JSxkWrk@192.168.5.78:8071/eureka/
    # 客户端监控检查(定时检查并发送健康状态到eureka服务器)  
    healthcheck:
      enabled: true
  instance:
    # 基于ip地址注册到eureka         
    prefer-ip-address: true            
# 日志    
logging:
  level:
    root: INFO
    okhttp3: DEBUG
# feign自定义配置
feign: 
  httpclient: 
    # 使用apache httpclient
    enabled: true
    # 使用ok3http
  #okhttp:
  #  enabled: true    
  client: 
    config: 
      # 定义全局的feign设置
      default: 
        connectTimeout: 1000
        readTimeout: 3000
      # 定义调用某个服务的feign设置,
      sc-sampleservice: 
        # 配置连接超时时间(毫秒)
        connectTimeout: 5000
        # 读取超时时间(毫秒)
        readTimeout: 10000
        # 日志
        loggerLevel: full
        # 请求拦截器
        requestInterceptors: 
          - com.sc.feign.controller.FeignBasicAuthRequestInterceptor
          - com.sc.feign.controller.GzipRequestInterceptor
  # 压缩
  compression:
    # 请求压缩
    request:
      enabled: true
      mime-types:
      - text/xml
      - text/plain
      - application/xml
      - application/json;charset=UTF-8
      min-request-size: 1024  
    # 响应压缩  
    response: 
      enabled: true

       

# 配置ribbon属性
# 1.配置某个服务的ribbon属性
sc-sampleservice:
  ribbon:
    restclient: 
      enabled: true  
    # 同一个实例最大重试测试，不包括首次调用
    MaxAutoRetries: 0
    # 重试其它实例的最大次数(例如:部署了同一个服务3个实例,此处应该设置为2）,不包括首次调用所选的实例
    MaxAutoRetriesNextServer: 1 
    ReadTimeout: 4000
       
      
    
